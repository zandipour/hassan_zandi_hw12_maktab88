{"version":3,"file":"get-packument.esm.js","sources":["../../src/endpoints/get-packument.ts"],"sourcesContent":["import { Packument } from '../types/packument';\nimport { normalizeRawPackument } from '../utils/normalize-raw-packument';\nimport { getRawPackument } from './get-raw-packument';\n\n/**\n * `getPackument` returns the packument (package document) containing\n * all the metadata about a package present on the registry.\n *\n * @param name - package name\n * @param registry - URL of the registry (default: npm registry)\n * @param mirrors - URLs of the registry mirrors (default: npm registry mirrors)\n * @param cached - accept cached responses (default: `true`)\n *\n * @example\n * Get the packument for package `query-registry` from the npm registry:\n *\n * ```typescript\n * import { getPackument } from 'query-registry';\n *\n * (async () => {\n *     const packument = await getPackument({ name: 'query-registry' });\n *\n *     // Output: 'query-registry'\n *     console.log(packument.name);\n * })();\n * ```\n *\n * @see {@link Packument}\n * @see {@link RawPackument}\n * @see {@link npmRegistry}\n * @see {@link npmRegistryMirrors}\n */\nexport async function getPackument({\n    name,\n    registry,\n    mirrors,\n    cached,\n}: {\n    name: string;\n    registry?: string;\n    mirrors?: string[];\n    cached?: boolean;\n}): Promise<Packument> {\n    const rawPackument = await getRawPackument({\n        name,\n        registry,\n        mirrors,\n        cached,\n    });\n    return normalizeRawPackument({ rawPackument });\n}\n"],"names":["getPackument","name","registry","mirrors","cached","rawPackument","getRawPackument","normalizeRawPackument"],"mappings":";;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;;AACI,eAAeA,YAAf,CAA4B;EAC/BC,IAD+B;EAE/BC,QAF+B;EAG/BC,OAH+B;AAI/BC,EAAAA,MAAAA;AAJ+B,CAA5B,EAUN;AACG,EAAA,MAAMC,YAAY,GAAG,MAAMC,eAAe,CAAC;IACvCL,IADuC;IAEvCC,QAFuC;IAGvCC,OAHuC;AAIvCC,IAAAA,MAAAA;AAJuC,GAAD,CAA1C,CAAA;AAMA,EAAA,OAAOG,qBAAqB,CAAC;AAAEF,IAAAA,YAAAA;AAAF,GAAD,CAA5B,CAAA;AACH;;;;"}