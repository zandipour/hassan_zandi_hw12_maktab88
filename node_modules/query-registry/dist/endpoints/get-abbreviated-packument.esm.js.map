{"version":3,"file":"get-abbreviated-packument.esm.js","sources":["../../src/endpoints/get-abbreviated-packument.ts"],"sourcesContent":["import { AbbreviatedPackument } from '../types/abbreviated-packument';\nimport { normalizeRawAbbreviatedPackument } from '../utils/normalize-raw-abbreviated-packument';\nimport { getRawAbbreviatedPackument } from './get-raw-abbreviated-packument';\n\n/**\n * `getAbbreviatedPackument` returns the abbreviated packument (package document)\n * containing only the metadata necessary to install a package present on the registry.\n *\n * @remarks\n * To get all the metadata (full packument) about a package see {@link getPackument}.\n *\n * @param name - package name\n * @param registry - URL of the registry (default: npm registry)\n * @param mirrors - URLs of the registry mirrors (default: npm registry mirrors)\n * @param cached - accept cached responses (default: `true`)\n *\n * @example\n * Get the abbreviated packument for package `query-registry` from the npm registry:\n *\n * ```typescript\n * import { getAbbreviatedPackument } from 'query-registry';\n *\n * (async () => {\n *     const packument = await getAbbreviatedPackument({ name: 'query-registry' });\n *\n *     // Output: 'query-registry'\n *     console.log(packument.name);\n * })();\n * ```\n *\n * @see {@link AbbreviatedPackument}\n * @see {@link RawAbbreviatedPackument}\n * @see {@link npmRegistry}\n * @see {@link npmRegistryMirrors}\n */\nexport async function getAbbreviatedPackument({\n    name,\n    registry,\n    mirrors,\n    cached,\n}: {\n    name: string;\n    registry?: string;\n    mirrors?: string[];\n    cached?: boolean;\n}): Promise<AbbreviatedPackument> {\n    const rawAbbreviatedPackument = await getRawAbbreviatedPackument({\n        name,\n        registry,\n        mirrors,\n        cached,\n    });\n    return normalizeRawAbbreviatedPackument({ rawAbbreviatedPackument });\n}\n"],"names":["getAbbreviatedPackument","name","registry","mirrors","cached","rawAbbreviatedPackument","getRawAbbreviatedPackument","normalizeRawAbbreviatedPackument"],"mappings":";;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BG;;AACI,eAAeA,uBAAf,CAAuC;EAC1CC,IAD0C;EAE1CC,QAF0C;EAG1CC,OAH0C;AAI1CC,EAAAA,MAAAA;AAJ0C,CAAvC,EAUN;AACG,EAAA,MAAMC,uBAAuB,GAAG,MAAMC,0BAA0B,CAAC;IAC7DL,IAD6D;IAE7DC,QAF6D;IAG7DC,OAH6D;AAI7DC,IAAAA,MAAAA;AAJ6D,GAAD,CAAhE,CAAA;AAMA,EAAA,OAAOG,gCAAgC,CAAC;AAAEF,IAAAA,uBAAAA;AAAF,GAAD,CAAvC,CAAA;AACH;;;;"}