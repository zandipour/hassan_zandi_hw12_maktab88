import { getDefinitelyTypedName } from './get-definitely-typed-name.esm.js';
import { getUntypedName } from './get-untyped-name.esm.js';
import { normalizeRawLicense } from './normalize-raw-license.esm.js';
import { normalizeRawRepository } from './normalize-raw-repository.esm.js';

async function normalizeRawPackageManifest({
  rawPackageManifest,
  rawPackument,
  registry,
  mirrors,
  cached
}) {
  const {
    _id: id,
    name,
    version,
    license: rawLicense,
    repository: rawRepository,
    _npmUser: publisher
  } = rawPackageManifest;
  const createdAt = rawPackument.time[version];
  const license = normalizeRawLicense({
    rawLicense
  });
  const gitRepository = normalizeRawRepository({
    rawRepository
  });
  const definitelyTypedName = await getDefinitelyTypedName({
    rawPackageManifest,
    registry,
    mirrors,
    cached
  });
  const untypedName = getUntypedName({
    name
  });
  return { ...rawPackageManifest,
    id,
    createdAt,
    publisher,
    license,
    gitRepository,
    definitelyTypedName,
    untypedName
  };
}

export { normalizeRawPackageManifest };
//# sourceMappingURL=normalize-raw-package-manifest.esm.js.map
