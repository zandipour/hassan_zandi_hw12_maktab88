{"version":3,"file":"normalize-raw-repository.esm.js","sources":["../../src/utils/normalize-raw-repository.ts"],"sourcesContent":["import urlJoin from 'url-join';\nimport { GitRepository } from '../types/git-repository';\nimport { Repository } from '../types/repository';\n\nexport function normalizeRawRepository({\n    rawRepository,\n}: {\n    rawRepository?: any;\n}): GitRepository | undefined {\n    if (isRepository(rawRepository)) {\n        return normalizeRepository({ rawRepository });\n    }\n\n    if (typeof rawRepository === 'string') {\n        return normalizeRepository({\n            rawRepository: { url: rawRepository },\n        });\n    }\n\n    return undefined;\n}\n\nfunction isRepository(rawRepository: any): rawRepository is Repository {\n    return (\n        rawRepository &&\n        typeof rawRepository === 'object' &&\n        typeof rawRepository['url'] === 'string' &&\n        ['string', 'undefined'].includes(typeof rawRepository['type']) &&\n        ['string', 'undefined'].includes(typeof rawRepository['directory'])\n    );\n}\n\nfunction normalizeRepository({\n    rawRepository,\n}: {\n    rawRepository: Repository;\n}): GitRepository | undefined {\n    const { url, directory } = rawRepository;\n\n    const parsedUrl = parseGitURL({ url });\n    if (!parsedUrl) {\n        return undefined;\n    }\n\n    return {\n        type: 'git',\n        url: parsedUrl,\n        directory,\n    };\n}\n\nfunction parseGitURL({ url }: { url: string }): string | undefined {\n    const urlWithProtocol = url.includes(':')\n        ? // A normal URL or a shortcut like `github:user/repository`\n          url\n        : // The short form github shortcut `user/repository`\n        url.includes('/')\n        ? `github:${url}`\n        : // Not a URL\n          '';\n    try {\n        const { protocol, hostname, pathname } = new URL(urlWithProtocol);\n        const cleanPathname = pathname.replace(/\\.git$/, '');\n        if (protocol === 'github:' || hostname === 'github.com') {\n            return urlJoin('https://github.com', cleanPathname);\n        }\n        if (protocol === 'gist:' || hostname === 'gist.github.com') {\n            return urlJoin('https://gist.github.com', cleanPathname);\n        }\n        if (protocol === 'bitbucket:' || hostname === 'bitbucket.org') {\n            return urlJoin('https://bitbucket.org', cleanPathname);\n        }\n        if (protocol === 'gitlab:' || hostname === 'gitlab.com') {\n            return urlJoin('https://gitlab.com', cleanPathname);\n        }\n        return urlWithProtocol;\n    } catch {\n        return undefined;\n    }\n}\n"],"names":["normalizeRawRepository","rawRepository","isRepository","normalizeRepository","url","undefined","includes","directory","parsedUrl","parseGitURL","type","urlWithProtocol","protocol","hostname","pathname","URL","cleanPathname","replace","urlJoin"],"mappings":";;AAIgB,SAAAA,sBAAA,CAAuB;AACnCC,EAAAA,aAAAA;AADmC,CAAvB,EAIf;AACG,EAAA,IAAIC,YAAY,CAACD,aAAD,CAAhB,EAAiC;AAC7B,IAAA,OAAOE,mBAAmB,CAAC;AAAEF,MAAAA,aAAAA;AAAF,KAAD,CAA1B,CAAA;AACH,GAAA;;AAED,EAAA,IAAI,OAAOA,aAAP,KAAyB,QAA7B,EAAuC;AACnC,IAAA,OAAOE,mBAAmB,CAAC;AACvBF,MAAAA,aAAa,EAAE;AAAEG,QAAAA,GAAG,EAAEH,aAAAA;AAAP,OAAA;AADQ,KAAD,CAA1B,CAAA;AAGH,GAAA;;AAED,EAAA,OAAOI,SAAP,CAAA;AACH,CAAA;;AAED,SAASH,YAAT,CAAsBD,aAAtB,EAAwC;AACpC,EAAA,OACIA,aAAa,IACb,OAAOA,aAAP,KAAyB,QADzB,IAEA,OAAOA,aAAa,CAAC,KAAD,CAApB,KAAgC,QAFhC,IAGA,CAAC,QAAD,EAAW,WAAX,CAAA,CAAwBK,QAAxB,CAAiC,OAAOL,aAAa,CAAC,MAAD,CAArD,CAHA,IAIA,CAAC,QAAD,EAAW,WAAX,CAAA,CAAwBK,QAAxB,CAAiC,OAAOL,aAAa,CAAC,WAAD,CAArD,CALJ,CAAA;AAOH,CAAA;;AAED,SAASE,mBAAT,CAA6B;AACzBF,EAAAA,aAAAA;AADyB,CAA7B,EAIC;EACG,MAAM;IAAEG,GAAF;AAAOG,IAAAA,SAAAA;AAAP,GAAA,GAAqBN,aAA3B,CAAA;EAEA,MAAMO,SAAS,GAAGC,WAAW,CAAC;AAAEL,IAAAA,GAAAA;AAAF,GAAD,CAA7B,CAAA;;EACA,IAAI,CAACI,SAAL,EAAgB;AACZ,IAAA,OAAOH,SAAP,CAAA;AACH,GAAA;;EAED,OAAO;AACHK,IAAAA,IAAI,EAAE,KADH;AAEHN,IAAAA,GAAG,EAAEI,SAFF;AAGHD,IAAAA,SAAAA;GAHJ,CAAA;AAKH,CAAA;;AAED,SAASE,WAAT,CAAqB;AAAEL,EAAAA,GAAAA;AAAF,CAArB,EAA6C;AACzC,EAAA,MAAMO,eAAe,GAAGP,GAAG,CAACE,QAAJ,CAAa,GAAb,CAClB;AACAF,EAAAA,GAFkB;EAIpBA,GAAG,CAACE,QAAJ,CAAa,GAAb,IACY,CAAAF,OAAAA,EAAAA,GAAK,EADjB;EAGE,EAPN,CAAA;;EAQA,IAAI;IACA,MAAM;MAAEQ,QAAF;MAAYC,QAAZ;AAAsBC,MAAAA,QAAAA;AAAtB,KAAA,GAAmC,IAAIC,GAAJ,CAAQJ,eAAR,CAAzC,CAAA;IACA,MAAMK,aAAa,GAAGF,QAAQ,CAACG,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CAAtB,CAAA;;AACA,IAAA,IAAIL,QAAQ,KAAK,SAAb,IAA0BC,QAAQ,KAAK,YAA3C,EAAyD;AACrD,MAAA,OAAOK,OAAO,CAAC,oBAAD,EAAuBF,aAAvB,CAAd,CAAA;AACH,KAAA;;AACD,IAAA,IAAIJ,QAAQ,KAAK,OAAb,IAAwBC,QAAQ,KAAK,iBAAzC,EAA4D;AACxD,MAAA,OAAOK,OAAO,CAAC,yBAAD,EAA4BF,aAA5B,CAAd,CAAA;AACH,KAAA;;AACD,IAAA,IAAIJ,QAAQ,KAAK,YAAb,IAA6BC,QAAQ,KAAK,eAA9C,EAA+D;AAC3D,MAAA,OAAOK,OAAO,CAAC,uBAAD,EAA0BF,aAA1B,CAAd,CAAA;AACH,KAAA;;AACD,IAAA,IAAIJ,QAAQ,KAAK,SAAb,IAA0BC,QAAQ,KAAK,YAA3C,EAAyD;AACrD,MAAA,OAAOK,OAAO,CAAC,oBAAD,EAAuBF,aAAvB,CAAd,CAAA;AACH,KAAA;;AACD,IAAA,OAAOL,eAAP,CAAA;AACH,GAhBD,CAgBE,MAAM;AACJ,IAAA,OAAON,SAAP,CAAA;AACH,GAAA;AACJ;;;;"}