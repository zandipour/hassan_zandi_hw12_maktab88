{"version":3,"file":"extract-package-manifest.esm.js","sources":["../../src/utils/extract-package-manifest.ts"],"sourcesContent":["import { RawPackageManifest } from '../types/raw-package-manifest';\nimport { RawPackument } from '../types/raw-packument';\nimport { InvalidPackageVersionError } from './errors';\nimport { log } from './log';\n\nexport function extractRawPackageManifest({\n    rawPackument,\n    version = 'latest',\n}: {\n    rawPackument: RawPackument;\n    version?: string;\n}): RawPackageManifest {\n    const { name, 'dist-tags': distTags, versions } = rawPackument;\n    const versionNumber = distTags[version] ?? version;\n    const manifest = versions[versionNumber];\n    if (!manifest) {\n        log('getPackageManifest: invalid package version: %O', {\n            name,\n            version,\n        });\n        throw new InvalidPackageVersionError(\n            `invalid package version: '${name}@${version}'`\n        );\n    }\n\n    return manifest;\n}\n"],"names":["extractRawPackageManifest","rawPackument","version","name","distTags","versions","versionNumber","manifest","log","InvalidPackageVersionError"],"mappings":";;;AAKM,SAAUA,yBAAV,CAAoC;EACtCC,YADsC;AAEtCC,EAAAA,OAAO,GAAG,QAAA;AAF4B,CAApC,EAML;AAAA,EAAA,IAAA,iBAAA,CAAA;;EACG,MAAM;IAAEC,IAAF;AAAQ,IAAA,WAAA,EAAaC,QAArB;AAA+BC,IAAAA,QAAAA;AAA/B,GAAA,GAA4CJ,YAAlD,CAAA;AACA,EAAA,MAAMK,aAAa,GAAGF,CAAAA,iBAAAA,GAAAA,QAAQ,CAACF,OAAD,CAAX,gCAAwBA,OAA3C,CAAA;AACA,EAAA,MAAMK,QAAQ,GAAGF,QAAQ,CAACC,aAAD,CAAzB,CAAA;;EACA,IAAI,CAACC,QAAL,EAAe;IACXC,GAAG,CAAC,iDAAD,EAAoD;MACnDL,IADmD;AAEnDD,MAAAA,OAAAA;AAFmD,KAApD,CAAH,CAAA;IAIA,MAAM,IAAIO,0BAAJ,CACF,CAAA,0BAAA,EAA6BN,IAAQ,CAAAD,CAAAA,EAAAA,OAAU,GAD7C,CAAN,CAAA;AAGH,GAAA;;AAED,EAAA,OAAOK,QAAP,CAAA;AACH;;;;"}