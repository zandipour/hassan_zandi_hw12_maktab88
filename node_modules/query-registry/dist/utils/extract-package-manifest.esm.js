import { InvalidPackageVersionError } from './errors.esm.js';
import { log } from './log.esm.js';

function extractRawPackageManifest({
  rawPackument,
  version = 'latest'
}) {
  var _distTags$version;

  const {
    name,
    'dist-tags': distTags,
    versions
  } = rawPackument;
  const versionNumber = (_distTags$version = distTags[version]) != null ? _distTags$version : version;
  const manifest = versions[versionNumber];

  if (!manifest) {
    log('getPackageManifest: invalid package version: %O', {
      name,
      version
    });
    throw new InvalidPackageVersionError(`invalid package version: '${name}@${version}'`);
  }

  return manifest;
}

export { extractRawPackageManifest };
//# sourceMappingURL=extract-package-manifest.esm.js.map
