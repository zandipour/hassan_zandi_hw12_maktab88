import { normalizeRawLicense } from './normalize-raw-license.esm.js';
import { normalizeRawRepository } from './normalize-raw-repository.esm.js';

function normalizeRawPackument({
  rawPackument
}) {
  const {
    _id: id,
    'dist-tags': distTags,
    time,
    license: rawLicense,
    repository: rawRepository
  } = rawPackument;
  const license = normalizeRawLicense({
    rawLicense
  });
  const gitRepository = normalizeRawRepository({
    rawRepository
  });
  const versionsToTimestamps = Object.fromEntries(Object.entries(time).filter(([key]) => {
    return !['created', 'modified'].includes(key);
  }));
  return { ...rawPackument,
    id,
    distTags,
    versionsToTimestamps,
    license,
    gitRepository
  };
}

export { normalizeRawPackument };
//# sourceMappingURL=normalize-raw-packument.esm.js.map
