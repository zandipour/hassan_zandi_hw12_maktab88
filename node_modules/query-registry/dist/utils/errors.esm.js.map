{"version":3,"file":"errors.esm.js","sources":["../../src/utils/errors.ts"],"sourcesContent":["import makeError, { BaseError } from 'make-error';\n\n/**\n * `FetchError` represents an error that happened when fetching a URL.\n *\n * The `instanceof` operator can be used to check for this error.\n */\nexport class FetchError extends BaseError {\n    constructor(\n        /** URL originally fetched */\n        readonly url: string,\n\n        /** Response received */\n        readonly response: Response\n    ) {\n        super(\n            `fetch: request to ${url} failed with status ${response.statusText}`\n        );\n    }\n}\n\n/**\n * `InvalidPackageNameError` is thrown when the name of a package\n * is not valid according to the npm registry naming rules.\n *\n * The `instanceof` operator can be used to check for this error.\n *\n * @see {@link https://www.npmjs.com/package/validate-npm-package-name}\n */\nexport const InvalidPackageNameError = makeError('InvalidPackageNameError');\n\n/**\n * `InvalidPackageVersionError` is thrown when a package's version does not exist.\n *\n * The `instanceof` operator can be used to check for this error.\n */\nexport const InvalidPackageVersionError = makeError(\n    'InvalidPackageVersionError'\n);\n"],"names":["FetchError","BaseError","constructor","url","response","statusText","InvalidPackageNameError","makeError","InvalidPackageVersionError"],"mappings":";;AAEA;;;;AAIG;;AACG,MAAOA,UAAP,SAA0BC,SAA1B,CAAmC;EACrCC,WAAA;AACI;EACSC,GAFb;AAII;AACSC,EAAAA,QALb,EAK+B;AAE3B,IAAA,KAAA,sBACyBD,GAAG,CAAA,oBAAA,EAAuBC,QAAQ,CAACC,UAAY,CADxE,CAAA,CAAA,CAAA;AAF2B,IAAA,IAAA,CAHlBF,GAGkB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAAlBC,QAAkB,GAAA,KAAA,CAAA,CAAA;IAHlB,IAAGD,CAAAA,GAAH,GAAAA,GAAA,CAAA;IAGA,IAAQC,CAAAA,QAAR,GAAAA,QAAA,CAAA;AAKZ,GAAA;;AAXoC,CAAA;AAczC;;;;;;;AAOG;;MACUE,uBAAuB,gBAAGC,SAAS,CAAC,yBAAD,EAAzC;AAEP;;;;AAIG;;MACUC,0BAA0B,gBAAGD,SAAS,CAC/C,4BAD+C;;;;"}