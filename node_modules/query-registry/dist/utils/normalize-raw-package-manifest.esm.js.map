{"version":3,"file":"normalize-raw-package-manifest.esm.js","sources":["../../src/utils/normalize-raw-package-manifest.ts"],"sourcesContent":["import { PackageManifest } from '../types/package-manifest';\nimport { RawPackageManifest } from '../types/raw-package-manifest';\nimport { RawPackument } from '../types/raw-packument';\nimport { getDefinitelyTypedName } from './get-definitely-typed-name';\nimport { getUntypedName } from './get-untyped-name';\nimport { normalizeRawLicense } from './normalize-raw-license';\nimport { normalizeRawRepository } from './normalize-raw-repository';\n\nexport async function normalizeRawPackageManifest({\n    rawPackageManifest,\n    rawPackument,\n    registry,\n    mirrors,\n    cached,\n}: {\n    rawPackageManifest: RawPackageManifest;\n    rawPackument: RawPackument;\n    registry?: string;\n    mirrors?: string[];\n    cached?: boolean;\n}): Promise<PackageManifest> {\n    const {\n        _id: id,\n        name,\n        version,\n        license: rawLicense,\n        repository: rawRepository,\n        _npmUser: publisher,\n    } = rawPackageManifest;\n\n    const createdAt = rawPackument.time[version]!;\n    const license = normalizeRawLicense({ rawLicense });\n    const gitRepository = normalizeRawRepository({ rawRepository });\n    const definitelyTypedName = await getDefinitelyTypedName({\n        rawPackageManifest,\n        registry,\n        mirrors,\n        cached,\n    });\n    const untypedName = getUntypedName({ name });\n\n    return {\n        ...rawPackageManifest,\n        id,\n        createdAt,\n        publisher,\n        license,\n        gitRepository,\n        definitelyTypedName,\n        untypedName,\n    };\n}\n"],"names":["normalizeRawPackageManifest","rawPackageManifest","rawPackument","registry","mirrors","cached","_id","id","name","version","license","rawLicense","repository","rawRepository","_npmUser","publisher","createdAt","time","normalizeRawLicense","gitRepository","normalizeRawRepository","definitelyTypedName","getDefinitelyTypedName","untypedName","getUntypedName"],"mappings":";;;;;AAQO,eAAeA,2BAAf,CAA2C;EAC9CC,kBAD8C;EAE9CC,YAF8C;EAG9CC,QAH8C;EAI9CC,OAJ8C;AAK9CC,EAAAA,MAAAA;AAL8C,CAA3C,EAYN;EACG,MAAM;AACFC,IAAAA,GAAG,EAAEC,EADH;IAEFC,IAFE;IAGFC,OAHE;AAIFC,IAAAA,OAAO,EAAEC,UAJP;AAKFC,IAAAA,UAAU,EAAEC,aALV;AAMFC,IAAAA,QAAQ,EAAEC,SAAAA;AANR,GAAA,GAOFd,kBAPJ,CAAA;AASA,EAAA,MAAMe,SAAS,GAAGd,YAAY,CAACe,IAAb,CAAkBR,OAAlB,CAAlB,CAAA;EACA,MAAMC,OAAO,GAAGQ,mBAAmB,CAAC;AAAEP,IAAAA,UAAAA;AAAF,GAAD,CAAnC,CAAA;EACA,MAAMQ,aAAa,GAAGC,sBAAsB,CAAC;AAAEP,IAAAA,aAAAA;AAAF,GAAD,CAA5C,CAAA;AACA,EAAA,MAAMQ,mBAAmB,GAAG,MAAMC,sBAAsB,CAAC;IACrDrB,kBADqD;IAErDE,QAFqD;IAGrDC,OAHqD;AAIrDC,IAAAA,MAAAA;AAJqD,GAAD,CAAxD,CAAA;EAMA,MAAMkB,WAAW,GAAGC,cAAc,CAAC;AAAEhB,IAAAA,IAAAA;AAAF,GAAD,CAAlC,CAAA;EAEA,OAAO,EACH,GAAGP,kBADA;IAEHM,EAFG;IAGHS,SAHG;IAIHD,SAJG;IAKHL,OALG;IAMHS,aANG;IAOHE,mBAPG;AAQHE,IAAAA,WAAAA;GARJ,CAAA;AAUH;;;;"}